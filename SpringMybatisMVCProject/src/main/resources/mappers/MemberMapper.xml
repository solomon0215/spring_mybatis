<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberMapper">
 	<cache/>
 	<sql id="baseColumn">
 		USER_ID,USER_PW,USER_NAME,
		USER_BIRTH, USER_GENDER, USER_EMAIL,USER_ADDR,
		USER_PH1, USER_PH2, USER_REGIST
 	</sql>
 	<resultMap type="memDTO" id="baseMember">
 		<id column="USER_ID" jdbcType="VARCHAR" property="userId"/><!-- primary key -->
 		<result column="USER_PW" jdbcType="VARCHAR" property="userPw"/>
 		<result column="USER_NAME" jdbcType="VARCHAR" property="userName"/>
 		<result column="USER_BIRTH" jdbcType="TIMESTAMP" property="userBirth"/>
 		<result column="USER_GENDER" jdbcType="CHAR" property="userGender"/>
 		<result column="USER_EMAIL" jdbcType="VARCHAR" property="userEmail"/>
 		<result column="USER_ADDR" jdbcType="VARCHAR" property="userAddr"/>
 		<result column="USER_PH1" jdbcType="VARCHAR" property="userPh1"/>
 		<result column="USER_PH2" jdbcType="VARCHAR" property="userPh2"/>
 		<result column="USER_REGIST" jdbcType="TIMESTAMP" property="userRegist"/>
 	</resultMap>
 	<insert id="memberInsert" parameterType="memDTO">
 		 insert into 
 		 MEMBER(<include refid="baseColumn" />)
		 values(#{userId},#{userPw},#{userName},
		 		#{userBirth},#{userGender},#{userEmail},#{userAddr},
		 		#{userPh1},#{userPh2},sysdate)
 	</insert>
 	<update id="memberUserCk" parameterType="memDTO">
 		update member 
 		set USER_CK=#{userCk} 
 		where USER_EMAIL = #{userEmail} and USER_NAME = #{userName} 
 		and USER_CK is not null
 	</update>
 	<select id="memberUserEmail" resultType="string">
 		select USER_EMAIL from MEMBER
 	</select>
 	<select id="userCheck" parameterType="memDTO" resultMap="baseMember">
 		select <include refid="baseColumn" />
 		from MEMBER 
 		<trim prefix="where" prefixOverrides="AND | OR">
 			 <if test="userPw != null">
 			 user_pw = #{userPw}
 			 </if>
 			and USER_ID = #{userId}
 		</trim>
 	</select>
 	<update id="memberUpdate" parameterType="memDTO">
 		update member
 		<trim prefix="set" suffixOverrides=",">
 			<if test="userEmail != null">
 			USER_EMAIL = #{userEmail},
 			</if>
 			USER_ADDR = #{userAddr},
 			USER_PH1 = #{userPh1},
 			<choose>
 				<when test="userPh2 != null">
					USER_PH2 = #{userPh2}
 				</when>
 				<when test="userPh2 == null">
 					USER_PH2 = null	
 				</when>
 			</choose>
 		</trim>
 		<where>
 			USER_ID = #{userId} and USER_PW = #{userPw}
 		</where> 
 	</update>
 	
 	<update id="updatePassword" parameterType="pwchg">
 		update member
 		<set>
 			USER_PW = #{newPw}
 		</set>
 		<where>
 			USER_ID = #{userId} and USER_PW = #{pw1}
 		</where>
 	</update>
 	
 	<select id="memberList" parameterType="startEnd"  resultMap="baseMember">
 		select rn, <include refid="baseColumn"/>
 		from
 		(select rownum rn,<include refid="baseColumn"/>
 		from 
 		(select <include refid="baseColumn"/> 
 		from member
 		order by USER_REGIST desc))
 		<where >
 			rn &gt;= #{startRow} and rn &lt;= #{endRow}
 		</where>
 	</select>
 	
 	<select id="memberCount" resultType="int">
 		select count(*)
 		from member
 	</select>
</mapper>